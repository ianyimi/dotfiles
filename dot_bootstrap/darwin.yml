---
- name: Machine setup (Darwin OS)
  hosts: localhost
  become: true
  connection: local
  gather_facts: true
  vars:
    flyctl_version: "0.1.130"
    pulumi_version: "v3.94.2"

  tasks:
    - name: Get my user
      ansible.builtin.set_fact:
        remote_regular_user: "{{ ansible_env.SUDO_USER or ansible_user_id }}"

    - name: Determine the path to zsh
      ansible.builtin.shell: "command -v zsh"
      register: zsh_path
      changed_when: false

    - name: Ensure zsh is installed
      become: false
      ansible.builtin.package:
        name: zsh
        state: present

    - name: Change shell to zsh
      ansible.builtin.user:
        name: "{{ remote_regular_user }}"
        shell: "{{ zsh_path.stdout }}"
      when: zsh_path.stdout != ""

- name: Brew Install
  hosts: localhost
  become: false
  environment:
    HOMEBREW_NO_ANALYTICS: "1"
  tasks:
    - name: Check Install - Git
      community.general.homebrew:
        name: git
        state: present

    - name: Check Install - GitHub CLI
      community.general.homebrew:
        name: gh
        state: present

    - name: Check Install - Neovim
      community.general.homebrew:
        name: neovim
        state: present

    - name: Check Install - Spotify
      community.general.homebrew:
        name: spotify
        state: present

    - name: Check Install - Tmux
      community.general.homebrew:
        name: tmux
        state: present

    - name: Check Install - WezTerm
      community.general.homebrew:
        name: wezterm
        state: present

    - name: Check Install - Arc Browser
      community.general.homebrew:
        name: arc
        state: present

    - name: Check Install - Keymapp
      community.general.homebrew:
        name: keymapp
        state: present

    - name: Check Install - Node.js
      community.general.homebrew:
        name: node
        state: present

    - name: Check Install - npm
      community.general.homebrew:
        name: npm
        state: present

    - name: Check Install - Obsidian
      community.general.homebrew:
        name: obsidian
        state: present

    - name: Check Install - Cascadia Code Font
      become: false
      environment:
        HOMEBREW_NO_ANALYTICS: "1"
      community.general.homebrew_cask:
        name: 
          - font-cascadia-code
        state: present

    - name: Check Install - Hack Nerd Font (SketchyBar)
      become: false
      environment:
        HOMEBREW_NO_ANALYTICS: "1"
      community.general.homebrew_cask:
        name: 
          - font-hack-nerd-font
        state: present

    - name: Check Install - Aerospace
      become: false
      environment:
        HOMEBREW_NO_ANALYTICS: "1"
      community.general.homebrew_cask:
        name: 
          - nikitabobko/tap/aerospace
        state: present

    - name: Check if Aerospace is running
      become: false
      shell: "pgrep -f 'Aerospace'"
      register: aerospace_status
      failed_when: false
      changed_when: false

    - name: Start Aerospace if not running
      become: false
      shell: "open -a Aerospace"
      when: aerospace_status.rc != 0

    - name: Tap FelixKratz formulae
      become: false
      community.general.homebrew_tap:
        name: FelixKratz/formulae
        state: present

    - name: Check Install - SketchyBar
      become: false
      community.general.homebrew:
        name: sketchybar
        state: present

    - name: Check if SketchyBar is running
      become: false
      shell: "pgrep -x sketchybar"
      register: sketchybar_status
      failed_when: false
      changed_when: false

    - name: Start SketchyBar if not running
      become: false
      shell: "sketchybar --restart"
      when: sketchybar_status.rc != 0

- name: GitHub SSH Key Setup
  hosts: localhost
  become: false
  vars_prompt:
    - name: "github_email"
      prompt: "Enter your GitHub email for the SSH key"
      private: false

  tasks:
    - name: Check if SSH key already exists
      ansible.builtin.stat:
        path: "{{ ansible_env.HOME }}/.ssh/id_ed25519"
      register: ssh_key

    - name: Generate a new SSH key
      ansible.builtin.command:
        cmd: "ssh-keygen -t ed25519 -C '{{ github_email }}' -f {{ ansible_env.HOME }}/.ssh/id_ed25519 -N ''"
      when: not ssh_key.stat.exists
      register: keygen_output
      changed_when: keygen_output.rc == 0

    - name: Start the SSH agent
      ansible.builtin.command: eval "$(ssh-agent -s)"
      when: not ssh_key.stat.exists
      changed_when: false

    - name: Add SSH key to the macOS Keychain
      ansible.builtin.command:
        cmd: "ssh-add --apple-use-keychain {{ ansible_env.HOME }}/.ssh/id_ed25519"
      when: not ssh_key.stat.exists
      changed_when: false

    - name: Read the SSH public key
      ansible.builtin.command:
        cmd: "cat {{ ansible_env.HOME }}/.ssh/id_ed25519.pub"
      register: ssh_pub_key

    - name: Print the SSH public key
      ansible.builtin.debug:
        msg: |
          Your new GitHub SSH public key is:
          {{ ssh_pub_key.stdout }}
          
          Please copy this key and paste it into GitHub under:
          Settings > SSH and GPG Keys > New SSH Key.

    - name: Wait for user confirmation to proceed
      ansible.builtin.pause:
        prompt: "Press Enter once you have pasted the SSH key into GitHub and saved it."

    - name: Test GitHub SSH connection
      ansible.builtin.command: "ssh -T git@github.com"
      register: github_test
      failed_when: github_test.rc != 1
      changed_when: false
      ignore_errors: true

    - name: Display GitHub SSH connection test result
      ansible.builtin.debug:
        msg: |
          GitHub SSH Test Result:
          {{ github_test.stderr }}
          
          If you see 'successfully authenticated' or similar, your SSH setup is complete!
